<html lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<link rel="stylesheet" href="style.css">
<title>リカバリ・ファイルの設計</title>
</head>
<body>

<font size=5>どんなリカバリ・ファイルにするか</font><br>&nbsp
ソース・ファイルを選んだら、どんなリカバリ・ファイルにするかを設計します。
<hr>

<h3>どのくらいの冗長性が必要か</h3>
<p>&nbsp
リカバリ・ファイルを作る際に最も重要な設定が「<b>冗長性</b>」です。
冗長性が多いほど修復できる可能性は高くなりますが、
作成に時間がかかるし、保管する際にかさばります。
保存するドライブのエラー発生率やネットワークの信頼性といった状況によって、
必要な冗長性は違います。
めったに破損しない状況で保険として作るだけなら、5% や 10% で十分でしょう。
破損することが多い状況なら 30% や 50% も要るかもしれません。
本気で保護したい場合は、バックアップを取って、更にリカバリ・ファイルも作ってください。
</p>
<p>&nbsp
不注意な削除や転送し忘れなどの人為的ミスでは、ファイル全体が丸ごと失われます。
こういう場合には、ファイル全体を復元できるだけの冗長性があるかが問題になります。
作成画面の右下の「<b>失われても完全に作り直すことができるファイルの数</b>」がその目安です。
「<b>最少 - 最多</b>」とは、最低でも何個以上、最高で何個までのファイルを復元できる、という意味です。
最少が 1個以上になるようにした方が安心です。
</p>

<h3>効率を気にした方がいいのか</h3>
<p>&nbsp
作成画面の左下に「<b>効率</b>」という、修復能力の目安が表示されます。
よっぽど保存場所の容量が小さくて苦労してるのでない限り、
普段は気にしなくていいです。
設定によって極端に差ができる場合は、効率が良くなる方にした方がいいですが、
数パーセントぐらいの違いなら無視できます。
実際に修復できるかどうかは、破損状態によって大きく変わるので、
効率だけ追求しても意味が無いからです。
</p>

<hr>

<h3>UseNet にリカバリ・ファイルを投稿するなら</h3>
<p>&nbsp
設定画面で、<a href="option2.htm#unit_size">ブロックの単位</a>を UseNet 用にすることが重要です。
サーバーによりますが、ほとんどは「yEnc 用: 3,000 行」か「yEnc 用: 5,000 行」です。
その他は標準設定のままでいいです。
リカバリ・ファイルを小さくしたいなら、<a href="option3.htm#packet_repetition">パケットの繰り返し</a>を「<b>4回までにする</b>」で制限してもいいです。
作成画面では、「サイズ指定方式」を「<b>2の乗数で大きくしていく</b>」にしてください。
</p>

</body>
</html>
