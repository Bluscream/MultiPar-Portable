<html lang="ja">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<link rel="stylesheet" href="style.css">
<title>Parchive の基礎知識</title>
</head>
<body>

<font size=5>Parchive の基礎知識</font>
<hr>

<p>&nbsp
PAR とは、Parchive または Parity Archive の略で、
翻訳すれば「同等品が収納された書庫」みたいな感じです。
本来のファイルが破損したり消失しても、同等品を取り出してきて、
修復・復元することができるという仕組みです。
PAR ファイルには、修復用のデータを含まず検査用のデータだけを含むインデックス・ファイルと、
検査と修復用の両方のデータを含むリカバリ・ファイルの二種類があり、同時に生成されます。
一般的には双方を区別せず、PAR ファイルと呼ぶことが多いです。
</p>
<p>
<table>
<tr><td>PAR1 ファイルの例:</td></tr>
<tr><td><tt>Data.PAR</tt></td><td>インデックス・ファイル</td></tr>
<tr><td><tt>Data.P01</tt></td><td>1番目のリカバリ・ファイル</td></tr>
<tr><td><tt>Data.P02</tt></td><td>2番目のリカバリ・ファイル</td></tr>
<tr><td><tt>Data.P03</tt></td><td>3番目のリカバリ・ファイル</td></tr>
<tr><td><font size=1>&nbsp</font></td></tr>
<tr><td>PAR2 ファイルの例:</td></tr>
<tr><td><tt>Data.PAR2</tt></td><td>インデックス・ファイル</td></tr>
<tr><td><tt>Data.vol0+1.PAR2</tt></td><td>リカバリ・ブロックを 1個含む 1番目のリカバリ・ファイル</td></tr>
<tr><td><tt>Data.vol1+2.PAR2</tt></td><td>リカバリ・ブロックを 2個含む 2番目のリカバリ・ファイル</td></tr>
<tr><td><tt>Data.vol3+4.PAR2</tt></td><td>リカバリ・ブロックを 4個含む 3番目のリカバリ・ファイル</td></tr>
</table>
</p>
<p>&nbsp
インデックス・ファイルではファイルの破損や消失を調べることしかできませんが、
サイズがずっと小さいのが利点です。
リカバリ・ファイルは、PAR1 と PAR2 で構造が異なります。
PAR1 では並べられたソース・ファイル集合に対してリカバリ・データを計算します。
ソース・ファイルを 1個修復するためには、リカバリ・ファイルが 1個必要になり、
3個修復するならリカバリ・ファイルが 3個必要になるという単純な仕組みです。
</p>
<p>&nbsp
PAR2 ではソース・ファイルごとにブロックを割り当てて、
そのブロック集合に対してリカバリ・データを計算します。
リカバリ・データを保存する際には、
リカバリ・ファイルに含まれるリカバリ・ブロックの数を変えることができます。
そのため、修復するのに必要なリカバリ・ブロック数によって、
必要なリカバリ・ファイルの個数を最小限に抑えることができます。
上記の例でいうなら、ブロックが 2個必要なら 2番目のリカバリ・ファイルだけ、
5個必要なら 1番目と 3番目のリカバリ・ファイルがあれば修復できます。
</p>

</body>
</html>
